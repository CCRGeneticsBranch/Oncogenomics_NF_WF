{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview of the workflow \u00b6 This next-generation sequencing (NGS) pipeline is containerized, platform-independent, uses Nextflow DSL2 workflow, and currently operates on NIH's Biowulf HPC cluster and the AWS cloud. This Exome-RNAseq workflow performs extensive quality control, mutational calling, tumor mutational burden assessment, mutational signatures, HLA typing, copy number calling, T-cell infiltration prediction, neoantigen prediction, gene expression profiling, fusion detection, variant calling, and annotation. This comprehensive suite is crucial for deep genomic characterization, addressing both research samples and clinical patient data at NIH. The ClinOmics data portal extends these capabilities by offering a user-friendly web portal for data exploration. Here is a Snapshot of our RNAseq and Exome workflows. RNAseq Workflow \u00b6 Exome Workflow \u00b6 Prerequisites \u00b6 To run this workflow, you will need the following software: Nextflow >= 21.04.3 Singularity 3.10.5 Graphviz 2.40 Installation \u00b6 Please clone this repository to your local filesystem using the following command: git clone https://github.com/CCRGeneticsBranch/Oncogenomics_NF_WF.git cd Oncogenomics_NF_WF Setting up the workflow on biowulf \u00b6 This workflow is hosted on biowulf in khanlab space /data/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF . All the pipeline config can be accessed using /data/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config file. Within the nextflow.config file you can select the profile to launch the pipeline. biowulf profile is preselected in the nf.sh script. This is set up to work with biowulf batch resources. Guidelines to create an input samplesheet can be found here . All the references, annotation and bed files are currently located under /data/khanlab . We currently support data processing for these capture kits. Sequencing capture kits \u00b6 RNAseq Exome Access clin_ex_v1 PolyA seqcapez.hu.ex.v3 PolyA_stranded Agilent_v7 Ribozero idt_v2_plus smartrna xgen_hyb_panelv2 seqcapez_hu_ex_v3 If you want to process the data sequenced by other kits, please reach out to Vineela Gangalapudi .","title":"Overview"},{"location":"#overview-of-the-workflow","text":"This next-generation sequencing (NGS) pipeline is containerized, platform-independent, uses Nextflow DSL2 workflow, and currently operates on NIH's Biowulf HPC cluster and the AWS cloud. This Exome-RNAseq workflow performs extensive quality control, mutational calling, tumor mutational burden assessment, mutational signatures, HLA typing, copy number calling, T-cell infiltration prediction, neoantigen prediction, gene expression profiling, fusion detection, variant calling, and annotation. This comprehensive suite is crucial for deep genomic characterization, addressing both research samples and clinical patient data at NIH. The ClinOmics data portal extends these capabilities by offering a user-friendly web portal for data exploration. Here is a Snapshot of our RNAseq and Exome workflows.","title":"Overview of the workflow"},{"location":"#rnaseq-workflow","text":"","title":"RNAseq Workflow"},{"location":"#exome-workflow","text":"","title":"Exome Workflow"},{"location":"#prerequisites","text":"To run this workflow, you will need the following software: Nextflow >= 21.04.3 Singularity 3.10.5 Graphviz 2.40","title":"Prerequisites"},{"location":"#installation","text":"Please clone this repository to your local filesystem using the following command: git clone https://github.com/CCRGeneticsBranch/Oncogenomics_NF_WF.git cd Oncogenomics_NF_WF","title":"Installation"},{"location":"#setting-up-the-workflow-on-biowulf","text":"This workflow is hosted on biowulf in khanlab space /data/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF . All the pipeline config can be accessed using /data/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config file. Within the nextflow.config file you can select the profile to launch the pipeline. biowulf profile is preselected in the nf.sh script. This is set up to work with biowulf batch resources. Guidelines to create an input samplesheet can be found here . All the references, annotation and bed files are currently located under /data/khanlab . We currently support data processing for these capture kits.","title":"Setting up the workflow on biowulf"},{"location":"#sequencing-capture-kits","text":"RNAseq Exome Access clin_ex_v1 PolyA seqcapez.hu.ex.v3 PolyA_stranded Agilent_v7 Ribozero idt_v2_plus smartrna xgen_hyb_panelv2 seqcapez_hu_ex_v3 If you want to process the data sequenced by other kits, please reach out to Vineela Gangalapudi .","title":"Sequencing capture kits"},{"location":"dockers/","text":"On Biowulf, this pipeline is executed by first loading the Singularity and Nextflow modules. The pipeline itself utilizes Docker containers for processing data across its various subworkflows and processes. Docker Containers Used in the Pipeline \u00b6 NCI Docker Containers \u00b6 Tool/Process Container Path Cutadapt nciccbr/ncigb_cutadapt_v1.18:latest Fastqc nciccbr/ccrgb_qctools:latest Star. , Rsem. , Arriba, Starfusion nciccbr/ccrgb_starplus:latest Fusioncatcher nciccbr/ccrgb_fusioncatcher:v2.0 Multiqc.* nciccbr/ccbr_multiqc_1.9:v0.0.1 Picard.*, HSMetrics, Hotspot_Coverage, Hotspot_Boxplot, Flagstat, Bamutils, Merge_new_HLA, MergeHLA, Read_depth, FailedExons_Genes, Combine_variants, Merge_Pvacseq_vcf nciccbr/ccrgb_qctools:latest GATK.*, RNAseq_HaplotypeCaller, Exome_HaplotypeCaller nciccbr/ccrgb_gatk_3.8-1:v1.0 Genotyping, HotspotPileup, Mutect_order, MutationalSignature, CoveragePlot, Exome_QC, CircosPlot, CircosPlot_lib, Mergefusion, Allstepscomplete, RNAlibrary_customQC, RNAqc_TrancriptCoverage, CoveragePlot, Coverage, Lib2_RNAqc_TrancriptCoverage, TargetIntervals, CNVkit_png, Strelka_vcf_processing nciccbr/ccrgb_qctools:latest AddAnnotation. , Split_vcf, UnionSomaticCalls, Actionable. , DBinput.*, Sequenza_annot, MutationBurden, Expressed nciccbr/ccrgb_qctools:latest Mixcr nciccbr/ccrgb_mixcr:v1.1 VDJtools nciccbr/ccrgb_vdjtools:latest Bamutil nciccbr/ccrgb_bamutil:latest SnpEff nciccbr/ccrgb_snpeff:1.0 Vcf2txt, FormatInput.*, Annovar, Custom_annotation, Combine_annotation nciccbr/ccrgb_annovar:v1.0 RNAseQC nciccbr/ccrgb_rnaseqc_v1.1.8:latest Strandedness nciccbr/ccbr_ngsderive:v1.0 BWA nciccbr/ccbr_ubuntu_base_20.04:v2.0 Sequenza nciccbr/ccrgb_qctools:v3.2 Cosmic3Signature nciccbr/ccrgb_qctools:v4.0 Fastq_screen nciccbr/ccbr_fastq_screen_0.14.1:latest TcellExtrect.* hsienchao/tcell_extrect:v1 HLA_HD vinegang/ccrgb_hlahd_1.7.0:v1.0 Conpair.* nciccbr/ccrgb_conpair:latest Fusion_Annotation, Merge_fusion_annotation hsienchao/fusion_tools:v1 VEP dnousome/ccbr_vcf2maf:v102.0.0 Pvacseq vinegang/pvactools_1.3.5_ps:1.0 Mantis_MSI vinegang/mantis:v1.0.5 Non-NCI Docker Containers \u00b6 Tool/Process Container Path Kraken staphb/kraken:1.1.1-no-db Krona pbelmann/krona:latest Bam2tdf quay.io/biocontainers/igvtools:2.3.93--0 Optitype fred2/optitype:release-v1.3.1 VerifyBamID ottov/verifybamid-aws:latest CNVkitP.* zlskidmore/cnvkit:0.9.6 Mutect dinglab2/mutect-tool:20190313 Manta szarate/manta:v1.6.0 Strelka davelabhub/strelka:2.9.10--0 Sequenza_utils nkrumm/sequenza-nf:latest CUSTOM_DUMPSOFTWAREVERSIONS quay.io/biocontainers/multiqc:1.11--pyhdfd78af_0","title":"Dockers"},{"location":"dockers/#docker-containers-used-in-the-pipeline","text":"","title":"Docker Containers Used in the Pipeline"},{"location":"dockers/#nci-docker-containers","text":"Tool/Process Container Path Cutadapt nciccbr/ncigb_cutadapt_v1.18:latest Fastqc nciccbr/ccrgb_qctools:latest Star. , Rsem. , Arriba, Starfusion nciccbr/ccrgb_starplus:latest Fusioncatcher nciccbr/ccrgb_fusioncatcher:v2.0 Multiqc.* nciccbr/ccbr_multiqc_1.9:v0.0.1 Picard.*, HSMetrics, Hotspot_Coverage, Hotspot_Boxplot, Flagstat, Bamutils, Merge_new_HLA, MergeHLA, Read_depth, FailedExons_Genes, Combine_variants, Merge_Pvacseq_vcf nciccbr/ccrgb_qctools:latest GATK.*, RNAseq_HaplotypeCaller, Exome_HaplotypeCaller nciccbr/ccrgb_gatk_3.8-1:v1.0 Genotyping, HotspotPileup, Mutect_order, MutationalSignature, CoveragePlot, Exome_QC, CircosPlot, CircosPlot_lib, Mergefusion, Allstepscomplete, RNAlibrary_customQC, RNAqc_TrancriptCoverage, CoveragePlot, Coverage, Lib2_RNAqc_TrancriptCoverage, TargetIntervals, CNVkit_png, Strelka_vcf_processing nciccbr/ccrgb_qctools:latest AddAnnotation. , Split_vcf, UnionSomaticCalls, Actionable. , DBinput.*, Sequenza_annot, MutationBurden, Expressed nciccbr/ccrgb_qctools:latest Mixcr nciccbr/ccrgb_mixcr:v1.1 VDJtools nciccbr/ccrgb_vdjtools:latest Bamutil nciccbr/ccrgb_bamutil:latest SnpEff nciccbr/ccrgb_snpeff:1.0 Vcf2txt, FormatInput.*, Annovar, Custom_annotation, Combine_annotation nciccbr/ccrgb_annovar:v1.0 RNAseQC nciccbr/ccrgb_rnaseqc_v1.1.8:latest Strandedness nciccbr/ccbr_ngsderive:v1.0 BWA nciccbr/ccbr_ubuntu_base_20.04:v2.0 Sequenza nciccbr/ccrgb_qctools:v3.2 Cosmic3Signature nciccbr/ccrgb_qctools:v4.0 Fastq_screen nciccbr/ccbr_fastq_screen_0.14.1:latest TcellExtrect.* hsienchao/tcell_extrect:v1 HLA_HD vinegang/ccrgb_hlahd_1.7.0:v1.0 Conpair.* nciccbr/ccrgb_conpair:latest Fusion_Annotation, Merge_fusion_annotation hsienchao/fusion_tools:v1 VEP dnousome/ccbr_vcf2maf:v102.0.0 Pvacseq vinegang/pvactools_1.3.5_ps:1.0 Mantis_MSI vinegang/mantis:v1.0.5","title":"NCI Docker Containers"},{"location":"dockers/#non-nci-docker-containers","text":"Tool/Process Container Path Kraken staphb/kraken:1.1.1-no-db Krona pbelmann/krona:latest Bam2tdf quay.io/biocontainers/igvtools:2.3.93--0 Optitype fred2/optitype:release-v1.3.1 VerifyBamID ottov/verifybamid-aws:latest CNVkitP.* zlskidmore/cnvkit:0.9.6 Mutect dinglab2/mutect-tool:20190313 Manta szarate/manta:v1.6.0 Strelka davelabhub/strelka:2.9.10--0 Sequenza_utils nkrumm/sequenza-nf:latest CUSTOM_DUMPSOFTWAREVERSIONS quay.io/biocontainers/multiqc:1.11--pyhdfd78af_0","title":"Non-NCI Docker Containers"},{"location":"pipeline_launch/","text":"Running the workflow. \u00b6 To initiate the workflow, execute the launch.sh script in a interactive node. This script acts as a wrapper, spawning and submitting jobs to the SLURM scheduling system. It extracts the PatientID and Casename information from the samplesheet , creates the corresponding output directory for each case, and organizes all results and log files under [output_directory]/PatientID/Casename/ . Usage: ./launch.sh <samplesheet_with_full_path> [output_directory] [genome] This script requires at least one positional argument: 1. Full path to samplesheet csv file Optional arguments: 2. Path to results directory (default: /data/khanlab/projects/processed_DATA) 3. Genome name. Accepted values are hg19 and mm39 (default: hg19) Workflow log \u00b6 When the workflow is launched, it will produce a log file that provides information about the pipeline execution, including the command line used, the version of Nextflow, the input folder path, the results directory, and the work directory. The log file will be generated under /Resultsdir/PatientID/casename directory. This is the logfile naming convention. patientid_casename_jobid_datelaunched-timelaunched.out Example: NCI0439_TestTNR_34233573_20240822-183525.out Sample log file: \u00b6 [+] Loading singularity 4.0.3 on cn4280 [+] Loading java 17.0.3.1 ... [+] Loading nextflow 23.10.0 [+] Loading Graphviz v 2.46.1 ... NXF_HOME=/data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/.nextflow nextflow run -c /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config -profile biowulf_test_run_slurm --logdir /data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/log /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf -resume -with-trace -with-timeline -with-dag ESC[33mNextflow 24.04.4 is available - Please consider updating your version to itESC(BESC[m N E X T F L O W ~ version 23.10.0 Launching `/vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf` [shrivelled_stallman] DSL2 - revision: b8c8cd72d2 E X O M E - R N A S E Q - N F P I P E L I N E =================================== NF version : 23.10.0 runName : shrivelled_stallman username : gangalapudiv2 configs : [/vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config, /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config] profile : biowulf_test_run_slurm cmd line : nextflow run -c /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config -profile biowulf_test_run_slurm --logdir /data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/log /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf -resume -with-trace -with-timeline -with-dag start time : 2024-08-20T12:54:52.989621486-04:00 projectDir : /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF launchDir : /vf/users/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR workdDir : /vf/users/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/work homeDir : /home/gangalapudiv2 [- ] process > Tumor_Normal_RNAseq_WF:Comm... - [- ] process > Tumor_Normal_RNAseq_WF:Comm... - [- ] process > Tumor_Normal_RNAseq_WF:Comm... - [- ] process > Tumor_Normal_RNAseq_WF:Comm... - [- ] process > Tumor_Normal_RNAseq_WF:Comm... - Workflow Resources \u00b6 $Script_home ---> Path to the code repository (/data/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF). $Script_home/nextflow.config ---> All the pipeline config resources are called from this file. We are using biowulf_test_run_slurm profile to run the samples on biowulf. $Script_home/config ---> Cluster config, singularity config, docker config and params config are located here. $Script_home/main.nf ---> This script calls the workflows and subworkflows in the pipeline. Run Debugging \u00b6 Run-related Files: All files associated with the run will be generated in the [output_directory]/PatientID/Casename directory. Log Files: The log file, ending in *.out , will be located in [output_directory]/PatientID/Casename . This file contains details on any errors encountered during the run and provides the path to the work directory for troubleshooting. Work directory: Inside [output_directory]/PatientID/Casename/work , you will find subfolders containing .command.sh , .command.log , and .command.err files for each process. These files offer detailed information about the execution of each command and any issues that may have occurred.","title":"Running the Pipeline"},{"location":"pipeline_launch/#running-the-workflow","text":"To initiate the workflow, execute the launch.sh script in a interactive node. This script acts as a wrapper, spawning and submitting jobs to the SLURM scheduling system. It extracts the PatientID and Casename information from the samplesheet , creates the corresponding output directory for each case, and organizes all results and log files under [output_directory]/PatientID/Casename/ . Usage: ./launch.sh <samplesheet_with_full_path> [output_directory] [genome] This script requires at least one positional argument: 1. Full path to samplesheet csv file Optional arguments: 2. Path to results directory (default: /data/khanlab/projects/processed_DATA) 3. Genome name. Accepted values are hg19 and mm39 (default: hg19)","title":"Running the workflow."},{"location":"pipeline_launch/#workflow-log","text":"When the workflow is launched, it will produce a log file that provides information about the pipeline execution, including the command line used, the version of Nextflow, the input folder path, the results directory, and the work directory. The log file will be generated under /Resultsdir/PatientID/casename directory. This is the logfile naming convention. patientid_casename_jobid_datelaunched-timelaunched.out Example: NCI0439_TestTNR_34233573_20240822-183525.out","title":"Workflow log"},{"location":"pipeline_launch/#sample-log-file","text":"[+] Loading singularity 4.0.3 on cn4280 [+] Loading java 17.0.3.1 ... [+] Loading nextflow 23.10.0 [+] Loading Graphviz v 2.46.1 ... NXF_HOME=/data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/.nextflow nextflow run -c /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config -profile biowulf_test_run_slurm --logdir /data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/log /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf -resume -with-trace -with-timeline -with-dag ESC[33mNextflow 24.04.4 is available - Please consider updating your version to itESC(BESC[m N E X T F L O W ~ version 23.10.0 Launching `/vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf` [shrivelled_stallman] DSL2 - revision: b8c8cd72d2 E X O M E - R N A S E Q - N F P I P E L I N E =================================== NF version : 23.10.0 runName : shrivelled_stallman username : gangalapudiv2 configs : [/vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config, /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config] profile : biowulf_test_run_slurm cmd line : nextflow run -c /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config -profile biowulf_test_run_slurm --logdir /data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/log /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf -resume -with-trace -with-timeline -with-dag start time : 2024-08-20T12:54:52.989621486-04:00 projectDir : /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF launchDir : /vf/users/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR workdDir : /vf/users/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/work homeDir : /home/gangalapudiv2 [- ] process > Tumor_Normal_RNAseq_WF:Comm... - [- ] process > Tumor_Normal_RNAseq_WF:Comm... - [- ] process > Tumor_Normal_RNAseq_WF:Comm... - [- ] process > Tumor_Normal_RNAseq_WF:Comm... - [- ] process > Tumor_Normal_RNAseq_WF:Comm... -","title":"Sample log file:"},{"location":"pipeline_launch/#workflow-resources","text":"$Script_home ---> Path to the code repository (/data/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF). $Script_home/nextflow.config ---> All the pipeline config resources are called from this file. We are using biowulf_test_run_slurm profile to run the samples on biowulf. $Script_home/config ---> Cluster config, singularity config, docker config and params config are located here. $Script_home/main.nf ---> This script calls the workflows and subworkflows in the pipeline.","title":"Workflow Resources"},{"location":"pipeline_launch/#run-debugging","text":"Run-related Files: All files associated with the run will be generated in the [output_directory]/PatientID/Casename directory. Log Files: The log file, ending in *.out , will be located in [output_directory]/PatientID/Casename . This file contains details on any errors encountered during the run and provides the path to the work directory for troubleshooting. Work directory: Inside [output_directory]/PatientID/Casename/work , you will find subfolders containing .command.sh , .command.log , and .command.err files for each process. These files offer detailed information about the execution of each command and any issues that may have occurred.","title":"Run Debugging"},{"location":"references/","text":"The current version of the pipeline supports the human reference genome Hg19 and the mouse reference genome mm39, both of which are obtained from Gencode.","title":"Pipeline References & Tools"},{"location":"samplesheet/","text":"There are two ways to generate a samplesheet for the pipeline depending on the use case. If the goal is to process patient fastq files through the pipeline to use the results for secondary analysis, you can follow these steps to build your own samplesheet . Along with processing the data, if you want to visualize the results on ClinOmics data portal then follow steps to build samplesheet from mastersheet . This is highly recommended. Build samplesheet from mastersheet \u00b6 For khanlab purposes, pipeline is always launched using the information in the mastersheets on biowulf under /data/khanlab space. The script samplesheet_builder.py queries the mastersheets to build a samplesheet for the pipeline. A copy of this script is available in the pipeline git repo. This script takes two inputs PatientID and casename . By default, it queries all mastersheets found in the /data/khanlab/projects/DATA/Sequencing_Tracking_Master directory and uses /data/khanlab/projects/DATA as the default input directory. When using a non-Khanlab master sheet, ensure the following columns are included: Patient ID : PatientID Library ID : LibraryID Enrichment Step : Capture kit name Matched RNA-seq Library : Matching RNA lib for the Exome library (can be left empty) Matched Normal : Matching normal lib for the Exome library (can be left empty) Diagnosis : Diagnosis Case Name : casename for website Type : Data type information FCID : flowcell ID (optional) Project : Project name Read1, Read2 Construction : The script uses information from the Input directory and following columns to build the file paths for read1 and read2 . Library ID FCID (optional) If FCID is provided, it will be used to build the paths; otherwise, the paths will be constructed using only the Input Path and Library ID . Usage: python ./samplesheet_builder.py <patient_id> <case_name> Default Samplesheet Directory: /data/khanlab/projects/DATA/Sequencing_Tracking_Master Default Input Directory: /data/khanlab/projects/DATA To use custom directories, modify the script: - Change 'DEFAULT_SAMPLESHEET_DIR' to your samplesheet directory path - Change 'DEFAULT_INPUT_DIR' to your input directory path python ./samplesheet_builder.py Test_Patient casename will output a file Test_Patient_casename.csv in the same folder. Error Handling \u00b6 The script includes the following error handling mechanisms: Invalid read1 and read2 Paths : If the paths for read1 and read2 are invalid, the script will output an error message. This message will prompt you to check and verify the input paths. Build your own samplesheet \u00b6 Alternately, we can build custom samplesheet without mastersheet. These are the required columns. Column name Notes Example sample Patient name NCI-Test1 library Name of the sample library Test1_T1D_E read1 Full path to the read1 /data/khanlab/DATA/Sample_Test1_T1D_E/Sample_Test1_T1D_E.R1.fastq.gz read2 Full path to the read2 /data/khanlab/DATA/Sample_Test1_T1D_E/Sample_Test1_T1D_E.R2.fastq.gz sample_captures Name of the capture kit used List of supported capture kits are here Matched_RNA Matched RNA library for the tumor library. This includes cell_line_RNA and tumor_RNA Test1_T1R_T Matched_normal Matched exome normal library for the tumor library. This includes panel, blood DNA, cell_line_DNA Test1_N1D_E Diagnosis Diagnosis of the patient Glioma casename Casename for the patient NCI-Test1 type Data type example: tumor_RNA, tumor_DNA, normal_DNA, blood_DNA, cell_line_DNA, cell_line_RNA FCID Flowcell ID ACJ678349 Example samplesheet: \u00b6 sample,library,read1,read2,sample_captures,Diagnosis,Matched_RNA,Matched_normal,casename,type,FCID,Project Test8,Test5_T1D_E,/data/khanlab/projects/fastq/Test5_T1D_E_R1.fastq.gz,/data/khanlab/projects/fastq/Test5_T1D_E_R2.fastq.gz,clin.ex.v1,Osteosarcoma,,Test8_N2D_E,NFtest0523,tumor_DNA,AWXYNH2,Test Test8,Test8_N2D_E,/data/khanlab/projects/fastq/Test8_N2D_E_R1.fastq.gz,/data/khanlab/projects/fastq/Test8_N2D_E_R2.fastq.gz,clin.ex.v1,Osteosarcoma,,,NFtest0523,normal_DNA,AWXYNH2,Test","title":"Setting up Samplesheet"},{"location":"samplesheet/#build-samplesheet-from-mastersheet","text":"For khanlab purposes, pipeline is always launched using the information in the mastersheets on biowulf under /data/khanlab space. The script samplesheet_builder.py queries the mastersheets to build a samplesheet for the pipeline. A copy of this script is available in the pipeline git repo. This script takes two inputs PatientID and casename . By default, it queries all mastersheets found in the /data/khanlab/projects/DATA/Sequencing_Tracking_Master directory and uses /data/khanlab/projects/DATA as the default input directory. When using a non-Khanlab master sheet, ensure the following columns are included: Patient ID : PatientID Library ID : LibraryID Enrichment Step : Capture kit name Matched RNA-seq Library : Matching RNA lib for the Exome library (can be left empty) Matched Normal : Matching normal lib for the Exome library (can be left empty) Diagnosis : Diagnosis Case Name : casename for website Type : Data type information FCID : flowcell ID (optional) Project : Project name Read1, Read2 Construction : The script uses information from the Input directory and following columns to build the file paths for read1 and read2 . Library ID FCID (optional) If FCID is provided, it will be used to build the paths; otherwise, the paths will be constructed using only the Input Path and Library ID . Usage: python ./samplesheet_builder.py <patient_id> <case_name> Default Samplesheet Directory: /data/khanlab/projects/DATA/Sequencing_Tracking_Master Default Input Directory: /data/khanlab/projects/DATA To use custom directories, modify the script: - Change 'DEFAULT_SAMPLESHEET_DIR' to your samplesheet directory path - Change 'DEFAULT_INPUT_DIR' to your input directory path python ./samplesheet_builder.py Test_Patient casename will output a file Test_Patient_casename.csv in the same folder.","title":"Build samplesheet from mastersheet"},{"location":"samplesheet/#error-handling","text":"The script includes the following error handling mechanisms: Invalid read1 and read2 Paths : If the paths for read1 and read2 are invalid, the script will output an error message. This message will prompt you to check and verify the input paths.","title":"Error Handling"},{"location":"samplesheet/#build-your-own-samplesheet","text":"Alternately, we can build custom samplesheet without mastersheet. These are the required columns. Column name Notes Example sample Patient name NCI-Test1 library Name of the sample library Test1_T1D_E read1 Full path to the read1 /data/khanlab/DATA/Sample_Test1_T1D_E/Sample_Test1_T1D_E.R1.fastq.gz read2 Full path to the read2 /data/khanlab/DATA/Sample_Test1_T1D_E/Sample_Test1_T1D_E.R2.fastq.gz sample_captures Name of the capture kit used List of supported capture kits are here Matched_RNA Matched RNA library for the tumor library. This includes cell_line_RNA and tumor_RNA Test1_T1R_T Matched_normal Matched exome normal library for the tumor library. This includes panel, blood DNA, cell_line_DNA Test1_N1D_E Diagnosis Diagnosis of the patient Glioma casename Casename for the patient NCI-Test1 type Data type example: tumor_RNA, tumor_DNA, normal_DNA, blood_DNA, cell_line_DNA, cell_line_RNA FCID Flowcell ID ACJ678349","title":"Build your own samplesheet"},{"location":"samplesheet/#example-samplesheet","text":"sample,library,read1,read2,sample_captures,Diagnosis,Matched_RNA,Matched_normal,casename,type,FCID,Project Test8,Test5_T1D_E,/data/khanlab/projects/fastq/Test5_T1D_E_R1.fastq.gz,/data/khanlab/projects/fastq/Test5_T1D_E_R2.fastq.gz,clin.ex.v1,Osteosarcoma,,Test8_N2D_E,NFtest0523,tumor_DNA,AWXYNH2,Test Test8,Test8_N2D_E,/data/khanlab/projects/fastq/Test8_N2D_E_R1.fastq.gz,/data/khanlab/projects/fastq/Test8_N2D_E_R2.fastq.gz,clin.ex.v1,Osteosarcoma,,,NFtest0523,normal_DNA,AWXYNH2,Test","title":"Example samplesheet:"}]}